READMME

order-book-simulator/
│── src/
│   └── order_book_sim.cpp      # Main implementation
│── include/                    # (optional, if you split headers later)
│── tests/
│   └── test_basic.cpp          # Unit tests (GoogleTest or Catch2)
│── benchmarks/
│   └── stress_test.cpp         # Benchmarks under heavy load
│── data/                       # (optional) synthetic or replay data
│── CMakeLists.txt              # Build system (or simple Makefile)
│── README.md                   # Project description
│── LICENSE                     # MIT or Apache 2.0
│── .gitignore

# High-Performance Order Book Simulator

A high-performance **C++17 stock exchange order book simulator**.  
Supports **limit, market, IOC orders**, and runs under **heavy multi-threaded load**.

### Features
- Price-time priority matching
- Limit, Market, Immediate-Or-Cancel order types
- Multi-threaded synthetic load generator
- Throughput and latency measurement
- Trade logging and book snapshots

### Example Usage
```bash
g++ -O3 -std=c++17 -pthread src/order_book_sim.cpp -o order_book_sim
./order_book_sim 4 250000 1


Order book simulator
Gen threads: 4 Orders/thread: 250000 Engine threads: 1
Total orders produced: 1000000
Orders processed: 1000000
Trades executed: 600432
Elapsed: 1.25 s
Throughput: 800k orders/s

# 1. set name/email (first time only)
git config --global user.name "Ali Al Habech"
git config --global user.email "aalhabec@uwaterloo.ca"

# 2. init, add, commit
git init
git add .
git commit -m "Initial commit: Order book simulator"

# 3. create remote (replace USERNAME and REPO)
git remote add origin git@github.com:USERNAME/order-book-simulator.git

# 4. force branch name to main and push
git branch -M main
git push -u origin main

